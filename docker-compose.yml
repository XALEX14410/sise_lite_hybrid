# Define la versión del formato de Docker Compose.
version: "3.9"

# Sección principal para definir todos los servicios (contenedores) de tu aplicación.
services:
  # Servicio de la base de datos (MariaDB).
  db:
    # Construye la imagen usando el Dockerfile que se encuentra en la carpeta './database'.
    build:
      context: ./database
    # Agregamos un nombre
    container_name: sise-lite-db
    # Define variables de entorno para la configuración de la base de datos.
    environment:
      MARIADB_DATABASE: ${DB_NAME}
      MARIADB_USER: ${DB_USER}
      MARIADB_PASSWORD: ${DB_PASS}
      MARIADB_ROOT_PASSWORD: ${DB_ROOT_PASS}
    # Mapea el puerto del contenedor (3306) al puerto de tu máquina (3306).
    ports:
      - "3306:3306"
    # Persiste los datos de la base de datos en tu máquina para que no se pierdan.
    volumes:
      - db_data:/var/lib/mysql
  
  # Servicio para el backend (API de Node.js).
  api:
    # Construye la imagen usando el Dockerfile que se encuentra en la carpeta './backend'.
    build:
      context: ./backend
    # Define variables de entorno para que el backend se conecte a la base de datos.
    environment:
      DB_HOST: db      # Usa el nombre del servicio 'db' para la conexión.
      DB_PORT: 3306
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      API_PORT: 9000
    # Mapea el puerto del contenedor (9000) al puerto de tu máquina (9000).
    ports:
      - "9000:9000"  # Cambiado a 9000 para que coincida con el puerto de backend
    # Asegura que la base de datos se inicie antes que la API.
    depends_on:
      - db

  # Servicio para el frontend (aplicación de Next.js).
  web:
    # Construye la imagen usando el Dockerfile que se encuentra en la carpeta './frontend'.
    build:
      context: ./frontend
    # Define variables de entorno para que el frontend se conecte al backend.
    environment:
      NEXT_PUBLIC_API_URL: http://api:9000  # Usa el nombre del servicio 'api' para la conexión.
    # Mapea el puerto del contenedor (3000) al puerto de tu máquina (3000).
    ports:
      - "3000:3000"
    # Asegura que la API se inicie antes que el frontend.
    depends_on:
      - api

# Define los volúmenes para que Docker los gestione.
volumes:
  db_data: